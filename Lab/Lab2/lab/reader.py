# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\86153\Desktop\Database\Lab\Lab2\lab\reader.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem, QMessageBox
from connect import *
import time
from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta  
import io
from PIL import Image
from PyQt5.QtGui import QPixmap

cursor, conn = connect()  # 连接数据库

class Ui_Reader(object):
    def setupUi(self, Reader):
        self.readerid = self.rid
        Reader.setObjectName("Reader")
        Reader.resize(868, 679)
        self.centralwidget = QtWidgets.QWidget(Reader)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(90, 30, 711, 591))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(0, 60, 711, 421))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(10)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(9, item)
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(40, 20, 61, 21))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.tab)
        self.lineEdit.setGeometry(QtCore.QRect(100, 10, 421, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setGeometry(QtCore.QRect(560, 10, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_5 = QtWidgets.QPushButton(self.tab)
        self.pushButton_5.setGeometry(QtCore.QRect(290, 500, 101, 41))
        self.pushButton_5.setObjectName("pushButton_5")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.tab_3)
        self.tableWidget_3.setGeometry(QtCore.QRect(-20, 70, 711, 421))
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(12)
        self.tableWidget_3.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(11, item)
        self.pushButton_6 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_6.setGeometry(QtCore.QRect(280, 510, 111, 41))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_7.setGeometry(QtCore.QRect(260, 20, 141, 28))
        self.pushButton_7.setObjectName("pushButton_7")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_2.setGeometry(QtCore.QRect(0, 140, 711, 421))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(10)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(9, item)
        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setGeometry(QtCore.QRect(40, 10, 41, 16))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(90, 10, 151, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(self.tab_2)
        self.label_3.setGeometry(QtCore.QRect(40, 50, 72, 15))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(90, 50, 151, 21))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_4 = QtWidgets.QLabel(self.tab_2)
        self.label_4.setGeometry(QtCore.QRect(40, 90, 72, 15))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_4.setGeometry(QtCore.QRect(90, 90, 151, 21))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_5 = QtWidgets.QLabel(self.tab_2)
        self.label_5.setGeometry(QtCore.QRect(280, 10, 51, 21))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_5.setGeometry(QtCore.QRect(340, 10, 151, 21))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label_6 = QtWidgets.QLabel(self.tab_2)
        self.label_6.setGeometry(QtCore.QRect(280, 50, 72, 15))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_6.setGeometry(QtCore.QRect(340, 50, 151, 21))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setGeometry(QtCore.QRect(540, 20, 121, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_3.setGeometry(QtCore.QRect(510, 70, 181, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_7 = QtWidgets.QLabel(self.tab_2)
        self.label_7.setGeometry(QtCore.QRect(280, 90, 72, 15))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_7.setGeometry(QtCore.QRect(340, 90, 151, 21))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.label_9 = QtWidgets.QLabel(self.tab_4)
        self.label_9.setGeometry(QtCore.QRect(30, 20, 72, 20))
        self.label_9.setObjectName("label_9")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_4.setGeometry(QtCore.QRect(200, 70, 111, 41))
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_12 = QtWidgets.QLabel(self.tab_4)
        self.label_12.setGeometry(QtCore.QRect(220, 20, 72, 15))
        self.label_12.setObjectName("label_12")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_11.setGeometry(QtCore.QRect(270, 20, 141, 21))
        self.lineEdit_11.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.comboBox = QtWidgets.QComboBox(self.tab_4)
        self.comboBox.setGeometry(QtCore.QRect(80, 20, 101, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_8 = QtWidgets.QLabel(self.tab_4)
        self.label_8.setGeometry(QtCore.QRect(440, 20, 91, 16))
        self.label_8.setObjectName("label_8")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_8.setGeometry(QtCore.QRect(530, 20, 151, 21))
        self.lineEdit_8.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_8.setGeometry(QtCore.QRect(360, 70, 101, 41))
        self.pushButton_8.setObjectName("pushButton_8")
        self.tableWidget_4 = QtWidgets.QTableWidget(self.tab_4)
        self.tableWidget_4.setGeometry(QtCore.QRect(0, 130, 351, 431))
        self.tableWidget_4.setObjectName("tableWidget_4")
        self.tableWidget_4.setColumnCount(0)
        self.tableWidget_4.setRowCount(7)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setVerticalHeaderItem(6, item)
        self.label_10 = QtWidgets.QLabel(self.tab_4)
        self.label_10.setGeometry(QtCore.QRect(381, 174, 301, 371))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.tab_4)
        self.label_11.setGeometry(QtCore.QRect(370, 130, 72, 15))
        self.label_11.setObjectName("label_11")
        self.tabWidget.addTab(self.tab_4, "")
        Reader.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Reader)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 868, 26))
        self.menubar.setObjectName("menubar")
        Reader.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Reader)
        self.statusbar.setObjectName("statusbar")
        Reader.setStatusBar(self.statusbar)

        self.retranslateUi(Reader)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(Reader)

        #借书查询按钮链接
        self.pushButton.clicked.connect(self.selectborrowbook)
        #条件查询按钮链接
        self.pushButton_2.clicked.connect(self.selectbook)
        #全部查询按钮链接
        self.pushButton_3.clicked.connect(self.selectallbook)
        #查询借书情况链接
        self.pushButton_7.clicked.connect(self.selectborrow)
        #还书链接
        self.pushButton_6.clicked.connect(self.returnbook)
        #借书链接
        self.pushButton_5.clicked.connect(self.borrowbook)
        #个人信息查询
        self.pushButton_8.clicked.connect(self.selectinformation)
        #个人信息修改
        self.pushButton_4.clicked.connect(self.changedata)
        # 使书籍表中鼠标点击操作选中的是一行而不是一格
        self.tableWidget_3.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        # 使书籍表中鼠标双击行的时候不可直接更改
        self.tableWidget_3.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        # 使书籍表中鼠标点击操作选中的是一行而不是一格
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        # 使书籍表中鼠标双击行的时候不可直接更改
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        
    def retranslateUi(self, Reader):
        _translate = QtCore.QCoreApplication.translate
        Reader.setWindowTitle(_translate("Reader", "Reader"))
        self.tabWidget.setWhatsThis(_translate("Reader", "<html><head/><body><p>da</p></body></html>"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Reader", "书名"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Reader", "书号"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Reader", "作者"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Reader", "类型"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Reader", "价格"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Reader", "出版社"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Reader", "馆藏册数"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("Reader", "在馆册数"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("Reader", "位置"))
        item = self.tableWidget.horizontalHeaderItem(9)
        item.setText(_translate("Reader", "被借次数"))
        self.label.setText(_translate("Reader", "书名"))
        self.pushButton.setText(_translate("Reader", "查询"))
        self.pushButton_5.setText(_translate("Reader", "确认借书"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Reader", "借书"))
        item = self.tableWidget_3.horizontalHeaderItem(0)
        item.setText(_translate("Reader", "书名"))
        item = self.tableWidget_3.horizontalHeaderItem(1)
        item.setText(_translate("Reader", "书号"))
        item = self.tableWidget_3.horizontalHeaderItem(2)
        item.setText(_translate("Reader", "作者"))
        item = self.tableWidget_3.horizontalHeaderItem(3)
        item.setText(_translate("Reader", "类型"))
        item = self.tableWidget_3.horizontalHeaderItem(4)
        item.setText(_translate("Reader", "价格"))
        item = self.tableWidget_3.horizontalHeaderItem(5)
        item.setText(_translate("Reader", "出版社"))
        item = self.tableWidget_3.horizontalHeaderItem(6)
        item.setText(_translate("Reader", "馆藏册数"))
        item = self.tableWidget_3.horizontalHeaderItem(7)
        item.setText(_translate("Reader", "在馆册数"))
        item = self.tableWidget_3.horizontalHeaderItem(8)
        item.setText(_translate("Reader", "位置"))
        item = self.tableWidget_3.horizontalHeaderItem(9)
        item.setText(_translate("Reader", "被借次数"))
        item = self.tableWidget_3.horizontalHeaderItem(10)
        item.setText(_translate("Reader", "借阅日期"))
        item = self.tableWidget_3.horizontalHeaderItem(11)
        item.setText(_translate("Reader", "应还日期"))
        self.pushButton_6.setText(_translate("Reader", "确认还书"))
        self.pushButton_7.setText(_translate("Reader", "查询当前借书情况"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("Reader", "还书"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("Reader", "书名"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("Reader", "书号"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("Reader", "作者"))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("Reader", "类型"))
        item = self.tableWidget_2.horizontalHeaderItem(4)
        item.setText(_translate("Reader", "价格"))
        item = self.tableWidget_2.horizontalHeaderItem(5)
        item.setText(_translate("Reader", "出版社"))
        item = self.tableWidget_2.horizontalHeaderItem(6)
        item.setText(_translate("Reader", "馆藏册数"))
        item = self.tableWidget_2.horizontalHeaderItem(7)
        item.setText(_translate("Reader", "在馆册数"))
        item = self.tableWidget_2.horizontalHeaderItem(8)
        item.setText(_translate("Reader", "位置"))
        item = self.tableWidget_2.horizontalHeaderItem(9)
        item.setText(_translate("Reader", "被借次数"))
        self.label_2.setText(_translate("Reader", "书名"))
        self.label_3.setText(_translate("Reader", "书号"))
        self.label_4.setText(_translate("Reader", "作者"))
        self.label_5.setText(_translate("Reader", "类型"))
        self.label_6.setText(_translate("Reader", "出版社"))
        self.pushButton_2.setText(_translate("Reader", "根据条件查询"))
        self.pushButton_3.setText(_translate("Reader", "查询所有（无需条件）"))
        self.label_7.setText(_translate("Reader", "位置"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Reader", "查询"))
        self.label_9.setText(_translate("Reader", "系别"))
        self.pushButton_4.setText(_translate("Reader", "确认修改"))
        self.label_12.setText(_translate("Reader", "密码"))
        self.comboBox.setItemText(0, _translate("Reader", "计算机系"))
        self.comboBox.setItemText(1, _translate("Reader", "数学系"))
        self.comboBox.setItemText(2, _translate("Reader", "物理系"))
        self.label_8.setText(_translate("Reader", "确认新密码"))
        self.pushButton_8.setText(_translate("Reader", "查询信息"))
        item = self.tableWidget_4.verticalHeaderItem(0)
        item.setText(_translate("Reader", "姓名"))
        item = self.tableWidget_4.verticalHeaderItem(1)
        item.setText(_translate("Reader", "性别"))
        item = self.tableWidget_4.verticalHeaderItem(2)
        item.setText(_translate("Reader", "读者号"))
        item = self.tableWidget_4.verticalHeaderItem(3)
        item.setText(_translate("Reader", "系别"))
        item = self.tableWidget_4.verticalHeaderItem(4)
        item.setText(_translate("Reader", "可借册数"))
        item = self.tableWidget_4.verticalHeaderItem(5)
        item.setText(_translate("Reader", "在借册数"))
        item = self.tableWidget_4.verticalHeaderItem(6)
        item.setText(_translate("Reader", "欠款"))
        self.label_10.setText(_translate("Reader", "TextLabel"))
        self.label_11.setText(_translate("Reader", "个人照片："))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("Reader", "个人信息"))


   # 借书查询
    def selectborrowbook(self):
        bookin = self.lineEdit.text()
        sql = 'select * from books where 书号="%s" or 书名="%s"' % (bookin, bookin)
        res = cursor.execute(sql)
        books = cursor.fetchall()
        n = len(books)
        self.tableWidget.setRowCount(n)
        for i in range(n):
            book = books[i]
            self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(str(book[1])))  #书名
            self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(book[0])))  #书号
            self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(str(book[2])))  #作者
            self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(book[3])))  #类型
            self.tableWidget.setItem(i, 4, QtWidgets.QTableWidgetItem(str(book[4])))  #价格
            self.tableWidget.setItem(i, 5, QtWidgets.QTableWidgetItem(str(book[5])))  #出版社
            self.tableWidget.setItem(i, 6, QtWidgets.QTableWidgetItem(str(book[6])))  #馆藏册数
            self.tableWidget.setItem(i, 7, QtWidgets.QTableWidgetItem(str(book[7])))  #在馆册数
            self.tableWidget.setItem(i, 8, QtWidgets.QTableWidgetItem(str(book[8])))  #位置
            self.tableWidget.setItem(i, 9, QtWidgets.QTableWidgetItem(str(book[9])))  #被借次数
    
    # 查询所有书籍
    def selectallbook(self):
        sql = 'SELECT * FROM books'
        cursor.execute(sql)
        books = cursor.fetchall()
        booknumber = len(books)
        self.tableWidget_2.setRowCount(booknumber)
        for i in range(booknumber):
            book = books[i]
            self.tableWidget_2.setItem(i, 0, QtWidgets.QTableWidgetItem(str(book[1])))
            self.tableWidget_2.setItem(i, 1, QtWidgets.QTableWidgetItem(str(book[0])))
            self.tableWidget_2.setItem(i, 2, QtWidgets.QTableWidgetItem(str(book[2])))
            self.tableWidget_2.setItem(i, 3, QtWidgets.QTableWidgetItem(str(book[3])))
            self.tableWidget_2.setItem(i, 4, QtWidgets.QTableWidgetItem(str(book[4]))) 
            self.tableWidget_2.setItem(i, 5, QtWidgets.QTableWidgetItem(str(book[5])))
            self.tableWidget_2.setItem(i, 6, QtWidgets.QTableWidgetItem(str(book[6])))  
            self.tableWidget_2.setItem(i, 7, QtWidgets.QTableWidgetItem(str(book[7])))
            self.tableWidget_2.setItem(i, 8, QtWidgets.QTableWidgetItem(str(book[8])))
            self.tableWidget_2.setItem(i, 9, QtWidgets.QTableWidgetItem(str(book[9])))

    # 根据条件查询书籍
    def selectbook(self):
        bookname = self.lineEdit_2.text()
        bookid = self.lineEdit_3.text()
        bookauthor = self.lineEdit_4.text()
        booktype = self.lineEdit_5.text()
        bookpress = self.lineEdit_6.text()
        booklocation = self.lineEdit_7.text()
        bookname_sql = ''
        bookid_sql = ''  
        bookauthor_sql  = ''
        booktype_sql = '' 
        bookpress_sql = ''
        booklocation_sql = ''
        # 进行条件sql语句编写
        inherit = 0
        if bookname:
            bookname_sql = ' 书名="%s"' % (bookname)
            inherit = 1
        if bookid:
            if inherit == 1:
                bookid_sql = ' and 书号="%s"' % (bookid)
            else:
                bookid_sql = ' 书号="%s"' % (bookid)
                inherit = 1
        if bookauthor:
            if inherit == 1:
                bookauthor_sql = 'and 作者="%s"' % (bookauthor)
            else:
                bookauthor_sql = ' 作者="%s"' % (bookauthor)
                inherit = 1
        if booktype:
            if inherit == 1:
                booktype_sql = ' and 类型="%s"' % (booktype)
            else:
                booktype_sql = ' 类型="%s"' % (booktype)
                inherit = 1
        if bookpress:
            if inherit == 1:
                bookpress_sql = ' and 出版社="%s"' % (bookpress)
            else:
                bookpress_sql = ' 出版社="%s"' % (bookpress)
                inherit = 1
        if booklocation:
            if inherit == 1:
                booklocation_sql = ' and 位置="%s"' % (booklocation)
            else:
                booklocation_sql = ' 位置="%s"' % (booklocation)
        sql_end = bookname_sql + bookid_sql + bookauthor_sql + booktype_sql + bookpress_sql + booklocation_sql
        if sql_end:
            sql_base = 'SELECT * FROM books where'
            sql = sql_base + sql_end
            res = cursor.execute(sql)
            books = cursor.fetchall()
            if res:
                booknumber = len(books)
                self.tableWidget_2.setRowCount(booknumber)
                for i in range(booknumber):
                    book = books[i]
                    self.tableWidget_2.setItem(i, 0, QtWidgets.QTableWidgetItem(str(book[1])))
                    self.tableWidget_2.setItem(i, 1, QtWidgets.QTableWidgetItem(str(book[0])))
                    self.tableWidget_2.setItem(i, 2, QtWidgets.QTableWidgetItem(str(book[2])))
                    self.tableWidget_2.setItem(i, 3, QtWidgets.QTableWidgetItem(str(book[3])))
                    self.tableWidget_2.setItem(i, 4, QtWidgets.QTableWidgetItem(str(book[4]))) 
                    self.tableWidget_2.setItem(i, 5, QtWidgets.QTableWidgetItem(str(book[5])))
                    self.tableWidget_2.setItem(i, 6, QtWidgets.QTableWidgetItem(str(book[6])))  
                    self.tableWidget_2.setItem(i, 7, QtWidgets.QTableWidgetItem(str(book[7])))
                    self.tableWidget_2.setItem(i, 8, QtWidgets.QTableWidgetItem(str(book[8])))
                    self.tableWidget_2.setItem(i, 9, QtWidgets.QTableWidgetItem(str(book[9])))
            else:
                QMessageBox.warning(self, "警告", "没有符合条件的书！", QMessageBox.Yes)
        else:
            QMessageBox.warning(self, "警告", "请输入查询条件！", QMessageBox.Yes)
    
    # 查询当前借书情况
    def selectborrow(self):
        sql = 'select * from borrow where 读者号="%s" and 是否归还="否"' % self.readerid
        res = cursor.execute(sql)
        borrows = cursor.fetchall()
        borrownum = len(borrows)
        self.tableWidget_3.setRowCount(borrownum)
        for i in range(borrownum):
            borrow = borrows[i]
            sql = 'select * from books where 书号="%s"' % borrow[1]
            res = cursor.execute(sql)
            books = cursor.fetchall()
            if books:
                book = books[0]
                self.tableWidget_3.setItem(i, 0, QtWidgets.QTableWidgetItem(str(book[1])))
                self.tableWidget_3.setItem(i, 1, QtWidgets.QTableWidgetItem(str(borrow[1])))
                self.tableWidget_3.setItem(i, 2, QtWidgets.QTableWidgetItem(str(book[2])))
                self.tableWidget_3.setItem(i, 3, QtWidgets.QTableWidgetItem(str(book[3])))
                self.tableWidget_3.setItem(i, 4, QtWidgets.QTableWidgetItem(str(book[4])))
                self.tableWidget_3.setItem(i, 5, QtWidgets.QTableWidgetItem(str(book[5])))
                self.tableWidget_3.setItem(i, 6, QtWidgets.QTableWidgetItem(str(book[6])))
                self.tableWidget_3.setItem(i, 7, QtWidgets.QTableWidgetItem(str(book[7])))
                self.tableWidget_3.setItem(i, 8, QtWidgets.QTableWidgetItem(str(book[8])))
                self.tableWidget_3.setItem(i, 9, QtWidgets.QTableWidgetItem(str(book[9])))
                self.tableWidget_3.setItem(i, 10, QtWidgets.QTableWidgetItem(str(borrow[2])))
                self.tableWidget_3.setItem(i, 11, QtWidgets.QTableWidgetItem(str(borrow[3])))

    # 还书
    def returnbook(self):
        chooserow = self.tableWidget_3.currentRow()
        if chooserow == -1:
            QMessageBox.warning(self, "警告", "请选择想还的书！", QMessageBox.Yes)
        else:
            date_now = time.strftime("%Y-%m-%d", time.localtime())
            # 获取当前日期  
            current_date = datetime.now().date()  
            date_now = current_date.strftime("%Y-%m-%d")  
            if date_now > self.tableWidget_3.item(chooserow,11).text():
                late = '是'
            else:
                late = '否'
            bookid = self.tableWidget_3.item(chooserow,1).text()
            print(bookid)
            #更新还书之后borrow表的信息
            sql = 'update borrow set 归还日期="%s", 是否归还="%s", 是否逾期="%s" where 读者号="%s" and 书号="%s" and 是否归还="%s" ' % (date_now, '是', late, self.readerid, bookid, '否')
            print(sql)
            res = cursor.execute(sql)
            conn.commit()
            #处理还书之后欠款是否更新
            if late == '是':
                sql = 'update readers set 欠款=欠款-5 where 读者号="%s"' % self.readerid
                res=cursor.execute(sql)
                conn.commit()
            #更新还书之后books表的变化
            sql = 'update books set 在馆册数=在馆册数+1 where 书号="%s"' % bookid
            res = cursor.execute(sql)
            conn.commit()
            #更新还书之后readers的变化
            sql = 'update readers set 可借册数=可借册数+1, 在借册数=在借册数-1 where 读者号="%s"' % self.readerid
            res = cursor.execute(sql)
            conn.commit()
            QMessageBox.warning(self, "提示", "还书成功！", QMessageBox.Yes)
    #frontend/reader.py
    # 借书
    def borrowbook(self):
        chooserow =self.tableWidget.currentRow()
        if chooserow == -1:
            QMessageBox.warning(self, "警告", "请选择想借的书！", QMessageBox.Yes)
        else:
            sql = 'select * from readers where 读者号="%s"' % self.readerid
            res = cursor.execute(sql)
            readers = cursor.fetchall()
            reader = readers[0]
            borrowcount = reader[4]
            if borrowcount < 1:
                QMessageBox.warning(self, "警告", "借书次数不够！", QMessageBox.Yes)
            else:
                booknum = self.tableWidget.item(chooserow,7).text()
                if int(booknum) < 1:
                    QMessageBox.warning(self, "警告", "书籍被借完了！", QMessageBox.Yes)
                else:
                    bookid = self.tableWidget.item(chooserow,1).text()
                    sql = 'select * from borrow where 读者号="%s" and 书号="%s" and 是否归还="否"' % (self.readerid, bookid)
                    res = cursor.execute(sql)
                    if(res):
                        QMessageBox.warning(self, "提示", "这本书已借阅尚未归还！", QMessageBox.Yes)
                    else:
                        current_date = datetime.now().date()
                        next_date = current_date + relativedelta(months=1)  
                        date_now = current_date.strftime("%Y-%m-%d")  
                        new_date= next_date.strftime("%Y-%m-%d")  
                        bookid = self.tableWidget.item(chooserow,1).text()
                        #将借书信息插入borrow表
                        sql = 'insert into borrow(读者号,书号,借书时间,应还日期) values ("%s","%s","%s","%s")'  % (self.readerid, bookid, date_now, new_date)
                        res = cursor.execute(sql)

                        #更新借书之后readers表的变化，books表的变化用触发器实现
                        sql = 'update readers set 可借册数=可借册数-1, 在借册数=在借册数+1 where 读者号="%s"' % self.readerid
                        res = cursor.execute(sql)
                        conn.commit()
                        QMessageBox.warning(self, "提示", "借书成功！", QMessageBox.Yes)
    
    # 个人信息修改
    def changedata(self):
        new_partment = self.comboBox.currentText()
        new_password = self.lineEdit_11.text()
        new_password_confirm = self.lineEdit_8.text()
        inherit = 0
        if new_partment:
            partment_sql = 'set 系别="%s"' % new_partment
            inherit = 1
        else:
            partment_sql = ''
        if new_password:
            if new_password != new_password_confirm:
                QMessageBox.warning(self, "警告", "重新确认密码！", QMessageBox.Yes)
                password_sql = None
            else:
                if inherit:
                    password_sql = ', 密码="%s"' % new_password
                else:
                    password_sql = 'set 密码="%s"' % new_password
                    inherit = 1
        else:
            password_sql = ''
        base_sql = 'update readers '
        end_sql = 'where 读者号="%s"' % self.readerid
        sql = base_sql + partment_sql + password_sql + end_sql
        if inherit == 1:
            cursor.execute(sql)
            conn.commit()
            QMessageBox.warning(self, "提示", "修改成功！", QMessageBox.Yes)
        else:
            QMessageBox.warning(self, "警告", "请输入信息！", QMessageBox.Yes)
    
        
    #个人信息查询
    def selectinformation(self):
        sql = 'select * from readers where 读者号="%s"' % self.readerid
        res = cursor.execute(sql)
        reader = cursor.fetchall()
        person = reader[0]
        self.tableWidget_4.setColumnCount(1)
        self.tableWidget_4.setItem(0,0,QtWidgets.QTableWidgetItem(str(person[1])))
        self.tableWidget_4.setItem(1,0,QtWidgets.QTableWidgetItem(str(person[2])))
        self.tableWidget_4.setItem(2,0,QtWidgets.QTableWidgetItem(str(person[0])))
        self.tableWidget_4.setItem(3,0,QtWidgets.QTableWidgetItem(str(person[3])))
        self.tableWidget_4.setItem(4,0,QtWidgets.QTableWidgetItem(str(person[4])))
        self.tableWidget_4.setItem(5,0,QtWidgets.QTableWidgetItem(str(person[5])))
        self.tableWidget_4.setItem(6,0,QtWidgets.QTableWidgetItem(str(person[7])))
        img_io = io.BytesIO(person[8])
        img = Image.open(img_io)
        img.save("temp_img.png")
        pixmap = QPixmap("temp_img.png")
        self.label_10.setPixmap(pixmap)
